// Generated by CoffeeScript 1.9.1
(function() {
  var assert, curry, describe, ref;

  ref = require("./helpers"), describe = ref.describe, assert = ref.assert;

  curry = require("./core").curry;

  describe("Logical functions", function(context) {
    var f_and, f_eq, f_neq, f_or, negate;
    f_and = curry(function(f, g) {
      return function() {
        return (f.apply(null, arguments)) && (g.apply(null, arguments));
      };
    });
    f_or = curry(function(f, g) {
      return function() {
        return (f.apply(null, arguments)) || (g.apply(null, arguments));
      };
    });
    negate = function(f) {
      return function() {
        return !(f.apply(null, arguments));
      };
    };
    context.test("negate", function() {
      return assert(!((negate(function() {
        return true;
      }))()));
    });
    f_eq = curry(function(f, g) {
      return function() {
        return (f.apply(null, arguments)) === (g.apply(null, arguments));
      };
    });
    f_neq = curry(function(x, y) {
      return function() {
        return (f.apply(null, arguments)) !== (g.apply(null, arguments));
      };
    });
    return module.exports = {
      f_and: f_and,
      f_or: f_or,
      negate: negate,
      f_eq: f_eq,
      f_neq: f_neq
    };
  });

}).call(this);
