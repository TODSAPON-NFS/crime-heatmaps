// Generated by CoffeeScript 1.9.1
(function() {
  var assert, curry, describe, negate, partial, ref, ref1;

  ref = require("./core"), curry = ref.curry, partial = ref.partial;

  negate = require("./logical").negate;

  ref1 = require("./helpers"), describe = ref1.describe, assert = ref1.assert;

  describe("Numeric functions", function(context) {
    var abs, add, div, even, gt, gte, lt, lte, max, min, mod, mul, odd, pow, sub;
    gte = curry(function(x, y) {
      return y >= x;
    });
    lte = curry(function(x, y) {
      return y <= x;
    });
    gt = curry(function(x, y) {
      return y > x;
    });
    lt = curry(function(x, y) {
      return y < x;
    });
    assert(lt(6, 5));
    add = curry(function(x, y) {
      return x + y;
    });
    sub = curry(function(x, y) {
      return y - x;
    });
    mul = curry(function(x, y) {
      return x * y;
    });
    div = curry(function(x, y) {
      return y / x;
    });
    mod = curry(function(x, y) {
      return y % x === 0;
    });
    even = mod(2);
    odd = negate(even);
    context.test("odd", function() {
      return assert(odd(5));
    });
    min = Math.min, max = Math.max, abs = Math.abs, pow = Math.pow;
    return module.exports = {
      gt: gt,
      lt: lt,
      gte: gte,
      lte: lte,
      add: add,
      sub: sub,
      mul: mul,
      div: div,
      mod: mod,
      even: even,
      odd: odd,
      min: min,
      max: max,
      abs: abs
    };
  });

}).call(this);
